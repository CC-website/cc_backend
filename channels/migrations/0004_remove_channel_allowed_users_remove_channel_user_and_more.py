# Generated by Django 5.0.1 on 2024-02-16 11:12

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('channels', '0003_channel_admins_channel_allowed_users_group_admins_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.RemoveField(
            model_name='channel',
            name='allowed_users',
        ),
        migrations.RemoveField(
            model_name='channel',
            name='user',
        ),
        migrations.RemoveField(
            model_name='group',
            name='allowed_users',
        ),
        migrations.RemoveField(
            model_name='subchannel',
            name='allowed_users',
        ),
        migrations.AddField(
            model_name='channel',
            name='blocked_members',
            field=models.ManyToManyField(related_name='blocked_channel_members', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='channel',
            name='members',
            field=models.ManyToManyField(related_name='channel_members', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='channel',
            name='owner',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_channels', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='group',
            name='blocked_members',
            field=models.ManyToManyField(related_name='blocked_group_members', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='group',
            name='members',
            field=models.ManyToManyField(related_name='group_members', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='subchannel',
            name='blocked_members',
            field=models.ManyToManyField(related_name='blocked_subchannel_members', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='subchannel',
            name='members',
            field=models.ManyToManyField(related_name='subchannel_members', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='channel',
            name='admins',
            field=models.ManyToManyField(related_name='admin_channels', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='group',
            name='admins',
            field=models.ManyToManyField(related_name='admin_groups', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='group',
            name='subchannel',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='groups', to='channels.subchannel'),
        ),
        migrations.AlterField(
            model_name='subchannel',
            name='admins',
            field=models.ManyToManyField(related_name='admin_subchannels', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='subchannel',
            name='channel',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subchannels', to='channels.channel'),
        ),
        migrations.CreateModel(
            name='Permission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('permission_type', models.IntegerField(choices=[(0, 'Delete'), (1, 'Create'), (2, 'Update'), (3, 'Is super admin'), (4, 'Add member'), (5, 'Remove member')])),
                ('exception_users', models.ManyToManyField(related_name='exception_permissions', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PermissionAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('permission_type', models.CharField(choices=[('admin', 'Admin'), ('member', 'Member')], max_length=20)),
                ('target_id', models.IntegerField()),
                ('target_type', models.CharField(max_length=20)),
                ('permission', models.ManyToManyField(to='channels.permission')),
            ],
        ),
    ]
