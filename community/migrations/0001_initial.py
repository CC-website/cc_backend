# Generated by Django 5.0.6 on 2024-07-08 11:30

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Channel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='channel_logos/')),
                ('description', models.TextField()),
                ('admins', models.ManyToManyField(related_name='admin_channels', to=settings.AUTH_USER_MODEL)),
                ('blocked_members', models.ManyToManyField(related_name='blocked_channel_members', to=settings.AUTH_USER_MODEL)),
                ('members', models.ManyToManyField(related_name='channel_members', to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_channels', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Permission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('permission_type', models.IntegerField(choices=[(0, 'Delete'), (1, 'Create'), (2, 'Update'), (3, 'Is super admin'), (4, 'Add member'), (5, 'Remove member')])),
                ('exception_users', models.ManyToManyField(related_name='exception_permissions', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PermissionAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('permission_type', models.CharField(max_length=120)),
                ('target_id', models.IntegerField()),
                ('target_type', models.CharField(max_length=20)),
                ('all_members', models.BooleanField(default=False)),
                ('members', models.ManyToManyField(related_name='Permission_members', to=settings.AUTH_USER_MODEL)),
                ('permission', models.ManyToManyField(to='community.permission')),
            ],
        ),
        migrations.CreateModel(
            name='SubChannel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='subchannel_logos/')),
                ('description', models.TextField()),
                ('admins', models.ManyToManyField(related_name='admin_subchannels', to=settings.AUTH_USER_MODEL)),
                ('blocked_members', models.ManyToManyField(related_name='blocked_subchannel_members', to=settings.AUTH_USER_MODEL)),
                ('channel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subchannels', to='community.channel')),
                ('members', models.ManyToManyField(related_name='subchannel_members', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='group_logos/')),
                ('description', models.TextField()),
                ('admins', models.ManyToManyField(related_name='admin_groups', to=settings.AUTH_USER_MODEL)),
                ('blocked_members', models.ManyToManyField(related_name='blocked_group_members', to=settings.AUTH_USER_MODEL)),
                ('members', models.ManyToManyField(related_name='group_members', to=settings.AUTH_USER_MODEL)),
                ('subchannel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='groups', to='community.subchannel')),
            ],
        ),
    ]
